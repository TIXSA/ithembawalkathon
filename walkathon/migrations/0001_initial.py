# Generated by Django 2.1.4 on 2020-08-31 20:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Entrant',
            fields=[
                ('eid', models.AutoField(primary_key=True, serialize=False)),
                ('uid', models.IntegerField()),
                ('registration_date', models.DateField(blank=True, null=True)),
                ('firstname', models.CharField(blank=True, max_length=50, null=True)),
                ('lastname', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('mobile', models.CharField(blank=True, max_length=50, null=True)),
                ('id_no', models.CharField(blank=True, max_length=50, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('preferred_communication', models.CharField(blank=True, max_length=50, null=True)),
                ('t_shirt_size', models.CharField(blank=True, max_length=50, null=True)),
                ('price', models.DecimalField(decimal_places=0, max_digits=32)),
                ('cancer_survivor', models.CharField(blank=True, max_length=50, null=True)),
                ('representative_or_consultant', models.CharField(blank=True, max_length=50, null=True)),
                ('avon_justine_acc_no', models.DecimalField(blank=True, decimal_places=0, max_digits=32, null=True)),
                ('earnings_opportunity', models.CharField(blank=True, max_length=50, null=True)),
                ('receive_communication', models.CharField(blank=True, max_length=50, null=True)),
                ('username', models.CharField(blank=True, max_length=50, null=True)),
                ('password', models.CharField(blank=True, max_length=50, null=True)),
                ('walk_distance', models.CharField(blank=True, max_length=50, null=True)),
                ('register_a_team', models.CharField(blank=True, max_length=50, null=True)),
                ('team_name', models.CharField(blank=True, max_length=50, null=True)),
                ('terms_conditions', models.CharField(blank=True, max_length=50, null=True)),
                ('street_address', models.CharField(blank=True, max_length=50, null=True)),
                ('area_code', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('province', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('str_no', models.CharField(blank=True, max_length=50, null=True)),
                ('total_price', models.DecimalField(blank=True, decimal_places=0, max_digits=32, null=True)),
                ('street_address_2', models.CharField(blank=True, max_length=50, null=True)),
                ('street_address_1', models.CharField(blank=True, max_length=50, null=True)),
                ('delivery_instructions', models.CharField(blank=True, max_length=1000, null=True)),
                ('terms_and_conditions_download', models.CharField(blank=True, max_length=50, null=True)),
                ('passport_no', models.CharField(blank=True, max_length=50, null=True)),
                ('register_by_passport_or_id', models.CharField(blank=True, max_length=50, null=True)),
                ('manual_paid', models.CharField(blank=True, max_length=50, null=True)),
                ('manual_paid_amount', models.DecimalField(blank=True, decimal_places=0, max_digits=32, null=True)),
                ('payfast_paid', models.CharField(blank=True, max_length=50, null=True)),
                ('last_edited_by', models.IntegerField(blank=True, null=True)),
                ('last_updated_datetime', models.DateTimeField(blank=True, null=True)),
                ('payment_comments', models.TextField(blank=True, null=True)),
                ('payfast_paid_amount', models.DecimalField(blank=True, decimal_places=0, max_digits=32, null=True)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=0, max_digits=32, null=True)),
                ('despatch_date', models.DateTimeField(blank=True, null=True)),
                ('despatched', models.CharField(blank=True, max_length=50, null=True)),
                ('receipted', models.CharField(blank=True, max_length=50, null=True)),
                ('despatch_comments', models.TextField(blank=True, null=True)),
                ('despatch_last_edit_by', models.IntegerField(blank=True, null=True)),
                ('despatch_last_update_datetime', models.DateTimeField(blank=True, null=True)),
                ('acc_date', models.DateTimeField(blank=True, null=True)),
                ('complete', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'entrant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('wid', models.AutoField(primary_key=True, serialize=False)),
                ('uid', models.IntegerField(blank=True, null=True)),
                ('firstname', models.CharField(blank=True, max_length=50, null=True)),
                ('lastname', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('mobile', models.CharField(blank=True, max_length=50, null=True)),
                ('id_no', models.CharField(blank=True, max_length=50, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('team_name', models.CharField(max_length=50)),
                ('t_shirt_size', models.CharField(blank=True, max_length=50, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=0, max_digits=32, null=True)),
                ('passport_no', models.CharField(blank=True, max_length=50, null=True)),
                ('register_by_passport_or_id', models.CharField(blank=True, max_length=50, null=True)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=0, max_digits=32, null=True)),
                ('complete', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'teams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=50, null=True)),
                ('password', models.CharField(blank=True, max_length=60, null=True)),
                ('chooser', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('mobile', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Streaming',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stream_key', models.CharField(max_length=500)),
                ('year', models.IntegerField()),
                ('mux_token_id', models.CharField(max_length=255)),
                ('mux_token_secret', models.CharField(max_length=255)),
                ('playback_id', models.CharField(max_length=500)),
                ('stream_id', models.CharField(default='', max_length=500)),
                ('stream_started', models.BooleanField(default=False)),
                ('stream_ended', models.BooleanField(default=False)),
                ('stream_name', models.CharField(default='', max_length=500)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SystemMessages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send_condition', models.CharField(choices=[('4km1', '4 km 1st Milestone'), ('4km2', '4 km 2nd Milestone'), ('4km3', '4 km 3rd Milestone'), ('4km4', '4 km 4th Milestone'), ('8km1', '8 km 1st Milestone'), ('8km2', '8 km 2nd Milestone'), ('8km3', '8 km 3rd Milestone'), ('8km4', '8 km 4th Milestone'), ('NOW', 'SEND NOW - WARNING will send immediately after you press save'), ('SCHEDULED', 'Scheduled - Date and Time need to be specified'), ('NEW_STREAM_STARTED', 'Stream started')], default=('4km1', '4 km 1st Milestone'), max_length=255)),
                ('time_to_be_sent', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('image_url', models.CharField(blank=True, max_length=500, null=True)),
                ('message_sent', models.BooleanField(default=False)),
                ('message_opened', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Walkathon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('year', models.IntegerField()),
                ('starting_time', models.TimeField()),
                ('starting_day', models.DateField()),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Walker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('walker_number', models.CharField(default=0, max_length=255)),
                ('distance_to_walk', models.CharField(default=8, max_length=255, null=True)),
                ('fcm_token', models.TextField(blank=True, null=True)),
                ('total_walked_distance', models.IntegerField(default=0, null=True)),
                ('walk_method', models.CharField(default='Route', max_length=255, null=True)),
                ('team', models.CharField(blank=True, max_length=255, null=True)),
                ('device_type', models.CharField(blank=True, max_length=20, null=True)),
                ('steps_walked', models.CharField(default=0, max_length=255, null=True)),
                ('time_started', models.DateTimeField(blank=True, null=True)),
                ('time_ended', models.DateTimeField(blank=True, null=True)),
                ('milestones', models.TextField(default=[], null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('messages_read', models.TextField(default=[], null=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
